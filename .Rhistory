# required libraries
library(tidyverse)
# read rls data
rls_raw = read_delim("/media/mari/Crucial X8/RLS_20190101_20221120.csv", skip = 71, delim = ",")
# select relevant columns
rls_sub = rls_raw %>%
select(area,
ecoregion, location, site_code, site_name,
latitude, longitude, survey_date, depth, block,
class, order, family, species_name,
size_class, total, biomass
)
# create new column by merging site_code and depth
## why? now we get a unique identifier per site AND depth, which we need for calculating our env. measures
rls_sub$site_code_depth = paste(rls_sub$site_code, rls_sub$depth, sep = "_")
# subset the data with the information required to calculate the predictability etc for each location, depth, and survey time
rls_envpred = rls_sub %>%
select(site_code_depth, latitude, longitude, survey_date) %>%
distinct(site_code_depth, .keep_all = TRUE) %>%
arrange(site_code_depth)
View(rls_envpred)
View(rls_envpred)
# clear memory
rm(list=ls())
# set working directory
setwd("~/Downloads")
# read rls data
rls_raw = read_delim("/media/mari/Crucial X8/RLS_2021_2022.csv", skip = 71, delim = ",")
# select relevant columns
rls_sub = rls_raw %>%
select(area,
ecoregion, location, site_code, site_name,
latitude, longitude, survey_date, depth, block,
class, order, family, species_name,
size_class, total, biomass
)
# create new column by merging site_code and depth
## why? now we get a unique identifier per site AND depth, which we need for calculating our env. measures
rls_sub$site_code_depth = paste(rls_sub$site_code, rls_sub$depth, sep = "_")
# subset the data with the information required to calculate the predictability etc for each location, depth, and survey time
rls_envpred = rls_sub %>%
select(site_code_depth, latitude, longitude, survey_date) %>%
distinct(site_code_depth, .keep_all = TRUE) %>%
arrange(site_code_depth)
View(rls_envpred)
# write csv
write.csv(rls_envpred,"~/projects/msc_thesis/data/rls_site_depth_ID.csv", row.names = FALSE)
# set working directory
setwd("~/projects/msc_thesis")
write.csv(rls_envpred,"/media/mari/Crucial X8/rls_site_depth_ID.csv", row.names = FALSE)
# load required libraries
library(tidyverse) # v. 1.3.2
# clear memory
rm(list=ls())
# set working directory
setwd("~/projects/msc_thesis")
packageVersion("envPred")
# set working directory
setwd("~/projects/msc_thesis")
# clean memory
rm(list=ls())
# set working directory
setwd("~/projects/msc_thesis")
# read rls data
test_csv = read.table("/media/mari/Crucial X8/sst_csv/-12.24_122.98.csv", quote="\"")
# read rls data
test_csv = read.table("/media/mari/Crucial X8/sst_csv/-12.24_122.98.csv", quote="\"")
# read rls data
test_csv = read.table("/media/mari/Crucial X8/survey_coordinates", quote="\"")
# read rls data
test_csv = read.table("~/media/mari/Crucial X8/survey_coordinates", quote="\"")
# clear memory
rm(list=ls())
# set working directory
setwd("~/projects/msc_thesis")
# read rls data
rls_raw = read_delim("/media/mari/Crucial X8/RLS_2021_2022.csv", skip = 71, delim = ",")
# read rls data
test = read_delim("/media/mari/Crucial X8/sst_csv/-12.24_122.98", delim = ",")
# read rls data
test = read_delim("/media/mari/Crucial X8/survey_coordinates", delim = ",")
# read rls data
test = read_delim("/media/mari/Crucial X8/survey_coordinates", delim = ",")
# clean memory
rm(list=ls())
getwd
getwd()
# set working directory
setwd("~/projects/msc_thesis")
# read rls data
rls_raw = read_delim("/media/mari/Crucial X8/RLS_2021_2022.csv", skip = 71, delim = ",")
# read rls data
test = read_delim("/media/mari/Crucial X8/RLS_2021_2022.csv", skip = 71, delim = ",")
# read rls data
test = read_delim("/media/mari/Crucial X8/sst_csv/-12.24_122.98.csv", delim = ",")
# read rls data
test = read_delim("/media/mari/Crucial X8/sst_csv/-11.98_123.38.csv", delim = ",")
View(test)
# read rls data
test = read_delim("/media/mari/Crucial X8/sst_csv/-11.98_123.38.csv", delim = "\"")
View(test)
# read rls data
test_csv = read.table("/media/mari/Crucial X8/sst_csv/-11.98_123.38.csv", quote="\"")
View(test_csv)
# read rls data
test_csv = read.table("/media/mari/Crucial X8/sst_csv/-11.98_123.38.csv", quote="\"")
# rename column names
colnames(test_csv) <- c('dates','value','variable')
test_wider = pivot_wider(test_csv,
names_from = variable)
View(test_wider)
test_wider = pivot_wider(test_csv,
names_from = variable,
values_from = value)
View(test_wider)
test_wider = test_csv %>%
distinct() %>%
pivot_wider(names_from = variable,
values_from = value
)
View(test_wider)
test_csv_wide = test_csv %>%
distinct() %>%
pivot_wider(names_from = variable,
values_from = value
)
str(test_csv_wide)
# change format of dates column
test_csv_wide$dates = as.Date(test_csv_wide$dates)
str(test_csv_wide)
test_ts = subset(test_csv_wide, dates > "2009-12-31" & dates < "2021-01-02")
test_ts = test_csv_wide %>%
filter(test_csv_wide, dates > "2009-12-31" & dates < "2021-01-02") %>%
select(dates, analysed_sst)
test_ts = test_csv_wide %>%
filter(test_csv_wide, dates > "2009-12-31" & dates < "2021-01-02") %>%
subset(dates, analysed_sst)
test_ts = test_csv_wide %>%
subset(test_csv_wide, dates > "2009-12-31" & dates < "2021-01-02") %>%
select(dates, analysed_sst)
# change format of dates column
test_csv_wide$dates = as.Date(test_csv_wide$dates, "%Y/%m/%d")
test_ts = test_csv_wide %>%
select(dates, analysed_sst) %>%
filter(test_csv_wide, dates > "2009-12-31" & dates < "2021-01-02")
test_ts = test_csv_wide %>%
select(dates, analysed_sst) %>%
filter(dates > "2009-12-31" & dates < "2021-01-02")
View(test_ts)
# envPred
env_stats(time_series = test_ts$analysed_sst,
date = date,
delta = 1,
noise_method = 'spectrum'
)
library(envPred)
# envPred
env_stats(time_series = test_ts$analysed_sst,
date = date,
delta = 1,
noise_method = 'spectrum'
)
?seasonality_and_colour
# envPred
env_stats(time_series = test_ts$analysed_sst,
dates = dates,
delta = 1,
noise_method = 'spectrum'
)
# envPred
env_stats(time_series = test_ts$analysed_sst,
dates = dates,
delta = 1,
noise_method = 'spectrum'
)
# envPred
env_stats(time_series = test_ts$analysed_sst,
dates = test_ts$dates,
delta = 1,
noise_method = 'spectrum'
)
# read data from github
rls_unique <- read.csv(url("https://github.com/codymoly/msc_thesis/blob/main/data/rls_site_depth_ID.csv"))
rls_coords <- read.csv(url("https://github.com/codymoly/msc_thesis/blob/main/data/survey_coordinates_2021_2022.csv"))
# read data from github
rls_unique <- read.csv(url("https://github.com/codymoly/msc_thesis/blob/main/data/rls_site_depth_ID.csv"))
View(rls_unique)
# read data from github
rls_unique <- read_delim(url("https://github.com/codymoly/msc_thesis/blob/main/data/rls_site_depth_ID.csv"), delim = ",")
View(rls_unique)
# read data from github
rls_unique <- read_delim("~/projects/msc_thesis/data/rls_site_depth_ID.csv", delim = ",")
View(rls_unique)
rls_coords = read_delim("~/projects/msc_thesis/data/survey_coordinates_2021_2022.csv", delim = ",")
View(rls_coords)
# envPred
env_stats(time_series = test_ts$analysed_sst,
dates = test_ts$dates,
delta = 1,
noise_method = 'spectrum'
)
# envPred
env_stats = env_stats(time_series = test_ts$analysed_sst,
dates = test_ts$dates,
delta = 1,
noise_method = 'spectrum'
)
View(env_stats)
