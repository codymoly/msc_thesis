# nMDS FOR ASSESSING THE EFFECT OF DEPTH ON THE COMMUNITY COMPOSITION
library(tidyverse)
library(vegan)
# clean memory
rm(list=ls())
# set working directory
setwd("~/projects/msc_thesis")
# read raw rls data
rls_raw = read_delim("/media/mari/Crucial X8/RLS_2021_2022.csv", skip = 71, delim = ",")
# subset data
rls_sub = rls_raw %>%
select(site_code, latitude, longitude, survey_date, depth,
block, species_name, total
)
# tranform species list into columns
rls_wide = rls_sub %>%
pivot_wider(names_from = species_name,
values_from = total,
names_sep = "_",
values_fill = list(total = 0),
values_fn = list(total = mean)
)
# list species names
rls_names =
select(rls_wide, -(site_code:block) ) %>%
names()
# select abundance data
rls_species =
rls_wide %>%
select(all_of(rls_names))
# choose random cases since the df is biiiiggg
set.seed(50)
rls_rsub = sample_n(rls_wide, 50)
View(rls_rsub)
View(rls_species)
# select abundance data
rls_species =
rls_rsub %>%
select(all_of(rls_names))
# tranform species list into columns
rls_wide = rls_sub %>%
pivot_wider(names_from = species_name,
values_from = total,
names_sep = "_",
values_fill = list(total = 0),
values_fn = list(total = mean)
)
# list species names
rls_names =
select(rls_wide, -(site_code:block) ) %>%
names()
# choose random cases since the df is biiiiggg
set.seed(50)
rls_rsub = sample_n(rls_wide, 50)
# select abundance data
rls_species =
rls_rsub %>%
select(all_of(rls_names))
# choose random cases since the df is biiiiggg
set.seed(100)
rls_rsub = sample_n(rls_wide, 100)
# select abundance data
rls_species =
rls_rsub %>%
select(all_of(rls_names))
# calculate dissimilarities between all rows
vegdist(x = rls_species, method = "bray", diag = TRUE, upper = TRUE)
# perform an nMDS
nmds_rls <- metaMDS(comm = rls_species,
distance = "bray",
k = 2,
autotransform = FALSE)
# check stress values
nmds_rls$stress
# check the stress plot
stressplot(nmds_rls)
# extract nMDS scores (we want to plot them with ggplot)
nmds_rls$points
# extract nMDS scores and create a dataframe
nmds_dat = tibble::as_tibble(nmds_rls$points)
View(nmds_dat)
View(rls_wide)
names(rls_wide)
# create a dataframe called site_dat with site-related information
site_dat <- select(rls_wide, site_code, latitude, longitude, survey_date, depth, block)
# view the site_dat dataframe
site_dat
# bind both dfs
nmds_dat = dplyr::bind_cols(nmds_dat, site_dat)
View(rls_rsub)
# extract nMDS scores and create a dataframe
nmds_dat = tibble::as_tibble(nmds_rls$points)
# write site information into a separate dataframe
site_dat = select(rls_rsub, site_code, latitude, longitude, survey_date, depth, block)
# bind both dfs
nmds_dat = dplyr::bind_cols(nmds_dat, site_dat)
# view the nmds_dat data
View(nmds_dat)
# plot the nMDS manually using ggplot
ggplot(data = nmds_dat,
mapping = aes(x = MDS1, y = MDS2, colour = depth)) +
geom_point(size = 2.5) +
scale_colour_viridis_d() +
theme_classic()
# plot the nMDS manually using ggplot
nmds_dat$depth = as.character(nmds_dat$depth)
ggplot(data = nmds_dat,
mapping = aes(x = MDS1, y = MDS2, colour = depth)) +
geom_point(size = 2.5) +
scale_colour_viridis_d() +
theme_classic()
range(rls_wide$depth)
# range(rls_wide$depth) # output: [1] 1 22
rls_wide_binned <- aggregate(rls_wide,
by=list(cut(rls_wide$depth,seq(0,24,4))),
mean)
# range(rls_wide$depth) # output: [1] 1 22
rls_wide_binned <- aggregate(rls_wide,
by=list(cut(rls_wide$depth,seq(0,24,4))),
colMeans(rls_wide[,7:1142]))
ggplot(data = nmds_dat,
mapping = aes(x = MDS1, y = MDS2, colour = depth)) +
geom_point(size = 2.5, shape = latitude) +
scale_colour_viridis_d() +
theme_classic()
range(nmds_dat$depth) # output: [1] 1 22
# choose random cases since the df is biiiiggg
set.seed(200)
rls_rsub = sample_n(rls_wide, 200)
# select abundance data
rls_species =
rls_rsub %>%
select(all_of(rls_names))
# calculate dissimilarities between all rows
vegdist(x = rls_species, method = "bray", diag = TRUE, upper = TRUE)
# perform nMDS on species-only data
nmds_rls <- metaMDS(comm = rls_species,
distance = "bray",
k = 2,
autotransform = FALSE)
# check stress values
nmds_rls$stress
# stress plot
stressplot(nmds_rls)
# extract nMDS scores and create a dataframe
nmds_dat = tibble::as_tibble(nmds_rls$points)
# write site information into a separate dataframe
site_dat = select(rls_rsub, site_code, latitude, longitude, survey_date, depth, block)
# bind both dfs
nmds_dat = dplyr::bind_cols(nmds_dat, site_dat)
range(nmds_dat$depth) # output: [1] 1 22
nmds_dat_binned <- aggregate(nmds_dat,
by=list(cut(nmds_dat$depth,seq(0,24,4))),
rowMeans(a[,c('MDS1', 'MDS2')], na.rm=TRUE))
nmds_dat_binned <- aggregate(nmds_dat,
by=list(cut(nmds_dat$depth,seq(0,24,4))),
rowMeans(nmds_dat[,c('MDS1', 'MDS2')], na.rm=TRUE))
mean(c("MDS1", "MDS2"))
str(nmds_dat)
# create depth bins
range(rls_rsub$depth) # output: [1] 1 21.1
nmds_dat_binned <- aggregate(rls_rsub,
by=list(cut(rls_rsub$depth,seq(0,24,4))),
mean(c("MDS1", "MDS2")))
nmds_dat_binned <- aggregate(rls_rsub,
by=list(cut(rls_rsub$depth,seq(0,24,4))),
mean(rls_rsub[,7:1142]))
nmds_dat_binned <- aggregate(rls_rsub,
by=list(cut(rls_rsub$depth,seq(0,24,4))),
mean)
View(nmds_dat_binned)
ggplot(data = nmds_dat,
mapping = aes(x = MDS1, y = MDS2, colour = depth)) +
geom_point(size = 2.5) +
scale_colour_viridis_d() +
theme_classic()
nmds_dat$depth = as.character(nmds_dat$depth)
ggplot(data = nmds_dat,
mapping = aes(x = MDS1, y = MDS2, colour = depth)) +
geom_point(size = 2.5) +
scale_colour_viridis_d() +
theme_classic()
# plot nMDS
ggplot(data = nmds_dat,
mapping = aes(x = MDS1, y = MDS2, colour = latitude)) +
geom_point(size = 2.5) +
scale_colour_viridis_d() +
theme_classic()
nmds_dat$latitude = as.character(nmds_dat$latitude)
# plot nMDS
ggplot(data = nmds_dat,
mapping = aes(x = MDS1, y = MDS2, colour = latitude)) +
geom_point(size = 2.5) +
scale_colour_viridis_d() +
theme_classic()
View(nmds_dat)
nmds_dat %>%
select(MDS1, MDS2, latitude, longitude, depth) %>%
cor(x = ., method = c("pearson")) %>%
corrplot(method = "number")
library(corrplot)
nmds_dat %>%
select(MDS1, MDS2, latitude, longitude, depth) %>%
cor(x = ., method = c("pearson")) %>%
corrplot(method = "number")
nmds_dat$depth = as.numeric(nmds_dat$depth)
nmds_dat$latitude = as.numeric(nmds_dat$latitude)
nmds_dat %>%
select(MDS1, MDS2, latitude, longitude, depth) %>%
cor(x = ., method = c("pearson")) %>%
corrplot(method = "number")
# bind both dfs
nmds_dat = dplyr::bind_cols(nmds_dat, site_dat)
# check correlation between nMDS axes, latitude, longitude, and depth
nmds_dat %>%
select(MDS1, MDS2, latitude, longitude, depth) %>%
cor(x = ., method = c("pearson")) %>%
corrplot(method = "number")
# write site information into a separate dataframe
site_dat = select(rls_rsub, site_code, latitude, longitude, survey_date, depth, block)
# bind both dfs
nmds_dat = dplyr::bind_cols(nmds_dat, site_dat)
# extract nMDS scores and create a dataframe
nmds_dat = tibble::as_tibble(nmds_rls$points)
View(nmds_dat)
# write site information into a separate dataframe
site_dat = select(rls_rsub, site_code, latitude, longitude, survey_date, depth, block)
View(site_dat)
# bind both dfs
nmds_dat = dplyr::bind_cols(nmds_dat, site_dat)
View(nmds_dat)
# check correlation between nMDS axes, latitude, longitude, and depth
nmds_dat %>%
select(MDS1, MDS2, latitude, longitude, depth) %>%
cor(x = ., method = c("pearson")) %>%
corrplot(method = "number")
# check correlation between nMDS axes, latitude, longitude, and depth
nmds_dat %>%
select(MDS1, MDS2, latitude, longitude, depth) %>%
cor(x = ., method = c("spearman")) %>%
corrplot(method = "number")
